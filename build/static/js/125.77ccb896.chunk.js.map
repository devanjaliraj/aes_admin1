{"version":3,"sources":["components/@vuexy/wizard/WizardBasic.js","views/apps/ro-configuration/RoForm.js","components/@vuexy/wizard/WizardComponent.js"],"names":["WizardBasic","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","id","match","params","axios","post","state","then","response","console","log","catch","error","any_other_facility","mobile","dealer_name","email","location","master_oil_company","omc_customer_code","puc_machine","total_no_air_machine","total_no_bay","total_no_mpd","total_no_nozzles","total_no_tanks","district","this","get","steps","title","content","md","sm","type","className","placeholder","lg","addonType","Ripple","color","size","enableAllSteps","onFinish","alert","React","Component","RoForm","Fragment","VuexyWizard","activeStep","errors","values","handleNextStep","index","total","validation","validate","length","onValidationError","handlePreviousStep","handleEnableAllSteps","handleSubmit","FormTag","AvForm","Form","tabs","map","item","i","key","onClick","classnames","active","done","tabPaneClass","activeTab","tabId","onSubmit","pagination","disabled","finishBtnText","submitted","defaultProps"],"mappings":"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","file":"static/js/125.77ccb896.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Wizard from \"./WizardComponent\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  // Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n} from \"reactstrap\";\r\n// import Checkbox from \"../checkbox/CheckboxesVuexy\";\r\nimport {  Search } from \"react-feather\";\r\nimport axios from \"axios\";\r\nclass WizardBasic extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //alert(this.props.match.params.id)\r\n    this.state = {\r\n      any_other_facility: \"\",\r\n      mobile:\"\",\r\n      dealer_name: \"\",   \r\n      email: \"\",\r\n      location: \"\",\r\n      master_oil_company: \"\",\r\n      omc_customer_code: \"\",\r\n      puc_machine: \"\",\r\n      state: \"\",\r\n      total_no_air_machine: \"\",\r\n      total_no_bay: \"\",\r\n      total_no_mpd: \"\",\r\n      total_no_nozzles: \"\",\r\n      total_no_tanks: \"\",\r\n      district: \"\",\r\n   \r\n   \r\n      };\r\n    }\r\n    componentDidMount() {\r\n      let { id } = this.props.match.params;\r\n      axios\r\n        .get(`/http://3.108.185.7/nodejs/api/dealer/viewonedealershipform/${id}`)\r\n        .then(response => {\r\n          console.log(response);\r\n        \r\n          this.setState({\r\n            // dealer_name: response.data.data.dealer_name,\r\n            // any_other_facility: response.data.data.any_other_facility,\r\n            // mobile: response.data.data.mobile,\r\n            // email: response.data.data.email,\r\n            // location: response.data.data.location,\r\n            // master_oil_company: response.data.data.master_oil_company,\r\n            // omc_customer_code: response.data.data.omc_customer_code,\r\n            // puc_machine: response.data.data.puc_machine,\r\n            // state: response.data.data.state,\r\n            // total_no_air_machine: response.data.data.total_no_air_machine,\r\n            // total_no_bay: response.data.data.total_no_bay,\r\n            // total_no_mpd: response.data.data.total_no_mpd,\r\n            // total_no_nozzles: response.data.data.total_no_nozzles,\r\n            // total_no_tanks: response.data.data.total_no_tanks,\r\n            // district: response.data.data.district,\r\n            // dealer_name: response.data.data.dealer_name,\r\n            \r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  //   async componentDidMount() {\r\n  //     var url = window.location.href;\r\n  // var id = url.substring(url.lastIndexOf('/') + 1);\r\n  //     let payload = {\r\n  //       \"tank_map\": [\r\n  //       ]\r\n  //   }\r\n  //     await axios.post(\"http://3.108.185.7/nodejs/api/dealer/addeditadvancedealershipform/\"+id,payload).then((response) => {\r\n  //       const rowData = response;\r\n  //       console.log('@@@@@@@@@RRRRRRRRRRRRRSSSSSSSSSSS',rowData.data.data);\r\n  //       this.setState({ rowData : rowData.data.data });\r\n  //     });\r\n  //   }\r\n\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axios\r\n      .post(`/http://3.108.185.7/nodejs/api/dealer/addeditadvancedealershipform/${id}`, this.state)\r\n      .then(response => {\r\n        console.log(response);\r\n        // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\"/app/material/materialList\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n \r\n    // submitHandler = e => {\r\n    //   e.preventDefault();\r\n    //   let { id } = this.props.match.params;\r\n    //   axios\r\n    //     .post(`/editmaterial/${id}`, this.state)\r\n    //     .then(response => {\r\n    //       console.log(response);\r\n    //       // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n    //       // this.props.history.push(\"/app/material/materialList\");\r\n    //     })\r\n    //     .catch(error => {\r\n    //       console.log(error);\r\n    //     });\r\n    // };\r\n  \r\n    render() {\r\n     \r\n        // const favColors = Object.keys(this.state.sizes)\r\n        // .filter(key => this.state.sizes[key])\r\n        // .join(\", \");\r\n      \r\n    \r\n        const steps = [\r\n          {\r\n            title: \"1\",\r\n          content: (\r\n            <Row>\r\n             \r\n       \r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Name of Dealership </Label>\r\n                  <Input type=\"text\"\r\n                  name =\"dealer_name\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n               />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Mobile No </Label>\r\n                  <Input type=\"text\"\r\n                  name=\"mobile\"\r\n                  // value={this.state.data.mobile}\r\n                  // onChange={this.changeHandler}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Email Id </Label>\r\n                  <Input type=\"email\" \r\n                  name=\"email\"\r\n                  // value={this.state.data.email}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n  \r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> City Name </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>New York</option>\r\n                    <option>Chicago</option>\r\n                    <option>San Francisco</option>\r\n                    <option>Boston</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> OMC Customer Code </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n                {/* <FormGroup>\r\n                  <Label> Job Title </Label>\r\n                  <Input type=\"text\" />\r\n                </FormGroup> */}\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Master Oil Company </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>New York</option>\r\n                    <option>Chicago</option>\r\n                    <option>San Francisco</option>\r\n                    <option>Boston</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> District </Label>\r\n                  <CustomInput type=\"select\" name=\"select\">\r\n                    <option>New York</option>\r\n                    <option>Chicago</option>\r\n                    <option>San Francisco</option>\r\n                    <option>Boston</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Location </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>New York</option>\r\n                    <option>Chicago</option>\r\n                    <option>San Francisco</option>\r\n                    <option>Boston</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              {/* <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> District </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>New York</option>\r\n                    <option>Chicago</option>\r\n                    <option>San Francisco</option>\r\n                    <option>Boston</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col> */}\r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n          title: 2,\r\n          content: (\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Total No. of MPD</Label>\r\n                  <Input type=\"text\" \r\n                  name=\"total_no_mpd\"\r\n                  // value={this.state.data.total_no_mpd}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label> Total No. of Bay </Label>\r\n                  <Input type=\"text\"\r\n                  name=\"total_no_bay\"\r\n                  // value={this.state.data.total_no_bay}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Total No. of Nozzles</Label>\r\n                  <Input type=\"text\"\r\n                  name=\"total_no_nozzles\" \r\n                  // value={this.state.data.total_no_nozzles}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label>Total No. of Tanks</Label>\r\n                  <Input type=\"text\"\r\n                  name=\"total_no_tanks\"\r\n                  // value={this.state.data.total_no_tanks}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Total No. of Air Machines</Label>\r\n                  <Input type=\"text\" \r\n                  name=\"total_no_air_machine\"\r\n                  // value={this.state.data.total_no_air_machine}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>PUC Machine</Label>\r\n                  <Input type=\"text\"\r\n                  name=\"puc_machine\"\r\n                  // value={this.state.data.puc_machine}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n               \r\n                <FormGroup>\r\n                <Label>Any other facilities</Label>\r\n                  <Input type=\"text\"\r\n                  name =\"any_other_facility\"\r\n                  // value={this.state.data.any_other_facility}\r\n                  // onChange={this.changeHandler}\r\n               />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Select Tank </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>Tank 1</option>\r\n                    <option>Tank 2</option>\r\n                    <option>Tank 3</option>\r\n                    <option>Tank 4</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Product Mapped to Tank </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>Tank 1</option>\r\n                    <option>Tank 2</option>\r\n                    <option>Tank 3</option>\r\n                    <option>Tank 4</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Capacity</Label>\r\n                  <CustomInput type=\"select\" name=\"select\">\r\n                    <option>Tank 1</option>\r\n                    <option>Tank 2</option>\r\n                    <option>Tank 3</option>\r\n                    <option>Tank 4</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Select MPD</Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>MPD 1</option>\r\n                    <option>MPD 2</option>\r\n                    <option>MPD 3</option>\r\n                    <option>MPD 4</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Map correct Bay to MPD</Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>MPD 1</option>\r\n                    <option>MPD 2</option>\r\n                    <option>MPD 3</option>\r\n                    <option>MPD 4</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Select BAY</Label>\r\n                  <CustomInput type=\"select\" name=\"select\">\r\n                    <option>BAY 1</option>\r\n                    <option>BAY 2</option>\r\n                    <option>BAY 3</option>\r\n                    <option>BAY 4</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Map Correct Nozzle to each Bay</Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>N1 and N2</option>\r\n                    <option>N1 and N2</option>\r\n                    <option>N1 and N2</option>\r\n                    <option>N1 and N2</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Select Nozzles</Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>N1 and N2</option>\r\n                    <option>N1 and N2</option>\r\n                    <option>N1 and N2</option>\r\n                    <option>N1 and N2</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Map Tank to Nozzles</Label>\r\n                  <CustomInput type=\"select\" name=\"select\">\r\n                    <option>Tank 1/Tank 2/Tank 3</option>\r\n                    <option>Tank 1/Tank 2/Tank 3</option>\r\n                    <option>Tank 1/Tank 2/Tank 3</option>\r\n                    <option>Tank 1/Tank 2/Tank 3</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n          title: 3,\r\n          content: (\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Add Payment modes </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Select from the below </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Mode </Label>\r\n                  <CustomInput type=\"select\" name=\"select\">\r\n                    <option>Upi</option>\r\n                    <option>Cesh</option>\r\n                    <option>Online</option>\r\n                    <option>Bank</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Bank </Label>\r\n                  <CustomInput type=\"select\" name=\"select\" >\r\n                    <option>Punb bank</option>\r\n                    <option>Hdb bank</option>\r\n                    <option>Hdfc bank</option>\r\n                    <option>Punb bank</option>\r\n                  </CustomInput>\r\n                </FormGroup>\r\n              </Col>\r\n        \r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n          title: 4,\r\n          content: (\r\n            <Row>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Add Credit Customer </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Name of the Customer </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Phone Number</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Credit Limit </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Credit Term Fuel </Label>\r\n                  <Input type=\"text\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Credit Term Lube </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Address </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Local ID </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Document Upload </Label>\r\n                  <Input type=\"text\" className=\"input p-5\" />\r\n                  <input type=\"file\" placeholder=\"Document Upload\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Any Agreement signed can be uploaded </Label>\r\n                  <Input type=\"text\" className=\"input p-5\" />\r\n                  <input type=\"file\" placeholder=\"Upload\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Vehicle No.</Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Multiple Entry can be done for tracking</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Local Guranter Name</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label></Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Local Guranter Name</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Local Guranter Number</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>List of Customer added with come here</Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\">\r\n                <FormGroup>\r\n                  <Label>Search Option</Label>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <Button.Ripple color=\"primary\">\r\n                        <Search size={15} />\\\r\n                      </Button.Ripple>\r\n                    </InputGroupAddon>\r\n                    <Input type=\"text\" />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                      <Button.Ripple color=\"primary\">Search !</Button.Ripple>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n  \r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n          title: 5,\r\n          content: (\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Nature </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Manufacturer </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Purchased on</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              \r\n            </Row>\r\n          ),\r\n        },\r\n        {\r\n          title: 6,\r\n          content: (\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Name of the Bank </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Credit Limit from Bank</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Interest Rate </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Account No</Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler} \r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>IFSC Code </Label>\r\n                  <Input type=\"text\" \r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label>Credit Offer from Bank Valid upto </Label>\r\n                  <Input type=\"text\"\r\n                  // value={this.state.data.dealer_name}\r\n                  // onChange={this.changeHandler}\r\n                   />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup>\r\n                  <Label> Document Upload </Label>\r\n                  <Input type=\"text\" className=\"input p-5\" />\r\n                  <input type=\"file\" placeholder=\"Document Upload\" />\r\n                </FormGroup>\r\n              </Col>\r\n            \r\n            </Row>\r\n       ),\r\n      },\r\n    ];\r\n\r\n    // this.submitHandler = this.submitHandler.bind(this);\r\n    // this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    // this.onChangeHandler1 = this.onChangeHandler1.bind(this);\r\n    // this.onChangeHandler2 = this.onChangeHandler2.bind(this);\r\n    // this.onChangeHandler3 = this.onChangeHandler3.bind(this);\r\n    // this.onChangeHandler4 = this.onChangeHandler4.bind(this);\r\n  \r\n\r\n\r\n\r\n \r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Basic Details</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Wizard\r\n            enableAllSteps\r\n            onFinish={() => alert(\"submitted\")}\r\n            steps={steps}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WizardBasic;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport WizardBasic from \"../../../components/@vuexy/wizard/WizardBasic\";\r\nclass RoForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <BreadCrumbs\r\n          breadCrumbTitle=\"Wizard\"\r\n          breadCrumbParent=\"Extra Components\"\r\n          breadCrumbActive=\"Wizard\"\r\n        /> */}\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <WizardBasic />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default RoForm;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n  Form,\r\n  Button\r\n} from \"reactstrap\"\r\nimport { AvForm } from \"availity-reactstrap-validation\"\r\n\r\nclass VuexyWizard extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.activeStep) {\r\n      if (props.activeStep !== state.activeStep) {\r\n        if (props.validate) {\r\n          if (state.errors.length === 0 && state.submitted)\r\n            return { activeStep: props.activeStep }\r\n        } else return { activeStep: props.activeStep }\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    activeStep: this.props.activeStep ? this.props.activeStep : 0,\r\n    errors: [],\r\n    values: []\r\n  }\r\n\r\n  handleNextStep = (index, total, errors = []) => {\r\n    let activeStep = this.state.activeStep\r\n    let validation = this.props.validate\r\n\r\n    if (!validation) {\r\n      if (activeStep <= index && activeStep !== total) {\r\n        this.setState({\r\n          activeStep: activeStep + 1\r\n        })\r\n      }\r\n    } else {\r\n      if (errors.length === 0 && activeStep <= index && activeStep !== total) {\r\n        this.setState({\r\n          activeStep: activeStep + 1\r\n        })\r\n      } else if (errors.length && this.props.onValidationError) {\r\n        this.props.onValidationError(this.state.errors)\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePreviousStep = index => {\r\n    let activeStep = this.state.activeStep\r\n    if (activeStep >= index)\r\n      this.setState({\r\n        activeStep: activeStep - 1\r\n      })\r\n  }\r\n\r\n  handleEnableAllSteps = index => {\r\n    if (this.props.enableAllSteps) {\r\n      this.setState({ activeStep: index })\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    if (\r\n      this.props.steps.length - 1 === this.state.activeStep &&\r\n      this.props.onFinish\r\n    ) {\r\n      this.props.onFinish(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let FormTag = this.props.validate ? AvForm : Form\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Nav\r\n          className={`vx-wizard ${\r\n            this.props.className ? this.props.className : \"\"\r\n          }`}\r\n          tabs>\r\n          {this.props.steps.map((item, i) => {\r\n            return (\r\n              <NavItem\r\n                className=\"step-wrapper\"\r\n                key={i}\r\n                onClick={() => this.handleEnableAllSteps(i)}>\r\n                <NavLink\r\n                  className={classnames(`step step-${i}`, {\r\n                    active: this.state.activeStep === i ? true : false,\r\n                    done: i < this.state.activeStep\r\n                  })}>\r\n                  <span className=\"step-text\">{item.title}</span>\r\n                </NavLink>\r\n              </NavItem>\r\n            )\r\n          })}\r\n        </Nav>\r\n        <TabContent\r\n          className={`vx-wizard-content ${\r\n            this.props.tabPaneClass ? this.props.tabPaneClass : \"\"\r\n          }`}\r\n          activeTab={this.state.activeStep}>\r\n          {this.props.steps.map((item, i) => {\r\n            return (\r\n              <TabPane\r\n                className={`step-content step-${i}-content`}\r\n                key={i}\r\n                tabId={i}>\r\n                <FormTag\r\n                  className=\"form-horizontal\"\r\n                  onSubmit={(e, errors, values) => {\r\n                    this.setState({ errors, values })\r\n                    if (!this.props.validate) e.preventDefault()\r\n                    this.handleNextStep(i, this.props.steps.length - 1, errors)\r\n                    this.handleSubmit(e)\r\n                  }}>\r\n                  {item.content}\r\n                  {this.props.pagination ? (\r\n                    <div className=\"wizard-actions d-flex justify-content-between\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={() => this.handlePreviousStep(i)}>\r\n                        Prev\r\n                      </Button>\r\n                      <Button type=\"submit\" color=\"primary\">\r\n                        {this.props.steps.length - 1 === i &&\r\n                        !this.props.finishBtnText\r\n                          ? \"Submit\"\r\n                          : this.props.steps.length - 1 === i &&\r\n                            this.props.finishBtnText\r\n                          ? this.props.finishBtnText\r\n                          : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  ) : null}\r\n                </FormTag>\r\n              </TabPane>\r\n            )\r\n          })}\r\n        </TabContent>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nVuexyWizard.propTypes = {\r\n  className: PropTypes.string,\r\n  steps: PropTypes.array.isRequired,\r\n  validate: PropTypes.bool,\r\n  enableAllSteps: PropTypes.bool,\r\n  finishBtnText: PropTypes.string,\r\n  onFinish: PropTypes.func,\r\n  pagination: PropTypes.bool,\r\n  onValidationError: PropTypes.func,\r\n  activeStep: PropTypes.number\r\n}\r\n\r\nVuexyWizard.defaultProps = {\r\n  pagination: true\r\n}\r\n\r\nexport default VuexyWizard\r\n"],"sourceRoot":""}