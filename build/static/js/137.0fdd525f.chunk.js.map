{"version":3,"sources":["views/apps/staffEnrollment/StaffForm.js","components/@vuexy/wizard/WizardComponent.js"],"names":["StaffForm","state","steps","title","content","md","sm","type","required","this","enableAllSteps","onFinish","alert","React","Component","VuexyWizard","activeStep","props","errors","values","handleNextStep","index","total","validation","validate","length","setState","onValidationError","handlePreviousStep","handleEnableAllSteps","handleSubmit","e","FormTag","AvForm","Form","Fragment","className","tabs","map","item","i","key","onClick","classnames","active","done","tabPaneClass","activeTab","tabId","onSubmit","preventDefault","pagination","color","disabled","finishBtnText","submitted","defaultProps"],"mappings":"gTAgBMA,G,oNACJC,MAAQ,CACNC,MAAO,CACL,CACEC,MAAO,EACPC,QACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,+BACA,kBAAC,IAAD,CAAOC,KAAK,OAAOC,UAAQ,MAG/B,kBAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,kCACA,kBAAC,IAAD,CAAOC,KAAK,OAAOC,UAAQ,MAG/B,kBAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAQ,MAGjC,kBAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAQ,QAMvC,CACEL,MAAO,EACPC,QACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOC,KAAK,YAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,yBACA,kBAAC,IAAD,CAAOA,KAAK,WAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAOC,KAAK,UAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOA,KAAK,aAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAOC,KAAK,WAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,kCACA,kBAAC,IAAD,CAAOC,KAAK,aA+GtB,CACEJ,MAAO,EACPC,QACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,0BACA,kBAAC,IAAD,CAAOC,KAAK,WAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,6BACA,kBAAC,IAAD,CAAOC,KAAK,WAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAOC,KAAK,aAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAOC,KAAK,aAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOC,KAAK,YAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,yBACA,kBAAC,IAAD,CAAOA,KAAK,WAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,mBACA,kBAAC,IAAD,CAAOC,KAAK,UAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,sBACA,kBAAC,IAAD,CAAOA,KAAK,aAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,uBACA,kBAAC,IAAD,CAAOC,KAAK,WAGhB,kBAAC,IAAD,CAAKF,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,KACE,kBAAC,IAAD,kCACA,kBAAC,IAAD,CAAOC,KAAK,e,4CAS1B,WACE,IAAQL,EAAUO,KAAKR,MAAfC,MACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEQ,gBAAc,EACdC,SAAU,kBAAMC,MAAM,cACtBV,MAAOA,U,GA/PKW,IAAMC,YAuQfd,a,6KCzQTe,E,4MAaJd,MAAQ,CACNe,WAAY,EAAKC,MAAMD,WAAa,EAAKC,MAAMD,WAAa,EAC5DE,OAAQ,GACRC,OAAQ,I,EAGVC,eAAiB,SAACC,EAAOC,GAAwB,IAAjBJ,EAAgB,uDAAP,GACnCF,EAAa,EAAKf,MAAMe,WACxBO,EAAa,EAAKN,MAAMO,SAE5B,GAAKD,EAOH,GAAsB,IAAlBL,EAAOO,QAAgBT,GAAcK,GAASL,IAAeM,EAC/D,EAAKI,SAAS,CACZV,WAAYA,EAAa,QAEtB,KAAIE,EAAOO,SAAU,EAAKR,MAAMU,kBAGrC,OAFA,EAAKV,MAAMU,kBAAkB,EAAK1B,MAAMiB,aAXtCF,GAAcK,GAASL,IAAeM,GACxC,EAAKI,SAAS,CACZV,WAAYA,EAAa,K,EAgBjCY,mBAAqB,SAAAP,GACnB,IAAIL,EAAa,EAAKf,MAAMe,WACxBA,GAAcK,GAChB,EAAKK,SAAS,CACZV,WAAYA,EAAa,K,EAI/Ba,qBAAuB,SAAAR,GACjB,EAAKJ,MAAMP,gBACb,EAAKgB,SAAS,CAAEV,WAAYK,K,EAIhCS,aAAe,SAAAC,GAEX,EAAKd,MAAMf,MAAMuB,OAAS,IAAM,EAAKxB,MAAMe,YAC3C,EAAKC,MAAMN,UAEX,EAAKM,MAAMN,SAASoB,I,4CAIxB,WAAU,IAAD,OACHC,EAAUvB,KAAKQ,MAAMO,SAAWS,SAASC,IAE7C,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,UAAS,oBACP3B,KAAKQ,MAAMmB,UAAY3B,KAAKQ,MAAMmB,UAAY,IAEhDC,MAAI,GACH5B,KAAKQ,MAAMf,MAAMoC,KAAI,SAACC,EAAMC,GAC3B,OACE,kBAAC,IAAD,CACEJ,UAAU,eACVK,IAAKD,EACLE,QAAS,kBAAM,EAAKb,qBAAqBW,KACzC,kBAAC,IAAD,CACEJ,UAAWO,IAAW,aAAD,OAAcH,GAAK,CACtCI,OAAQ,EAAK3C,MAAMe,aAAewB,EAClCK,KAAML,EAAI,EAAKvC,MAAMe,cAEvB,0BAAMoB,UAAU,aAAaG,EAAKpC,aAM5C,kBAAC,IAAD,CACEiC,UAAS,4BACP3B,KAAKQ,MAAM6B,aAAerC,KAAKQ,MAAM6B,aAAe,IAEtDC,UAAWtC,KAAKR,MAAMe,YACrBP,KAAKQ,MAAMf,MAAMoC,KAAI,SAACC,EAAMC,GAC3B,OACE,kBAAC,IAAD,CACEJ,UAAS,4BAAuBI,EAAvB,YACTC,IAAKD,EACLQ,MAAOR,GACP,kBAACR,EAAD,CACEI,UAAU,kBACVa,SAAU,SAAClB,EAAGb,EAAQC,GACpB,EAAKO,SAAS,CAAER,SAAQC,WACnB,EAAKF,MAAMO,UAAUO,EAAEmB,iBAC5B,EAAK9B,eAAeoB,EAAG,EAAKvB,MAAMf,MAAMuB,OAAS,EAAGP,GACpD,EAAKY,aAAaC,KAEnBQ,EAAKnC,QACL,EAAKa,MAAMkC,WACV,yBAAKf,UAAU,iDACb,kBAAC,IAAD,CACEgB,MAAM,UACNC,SAAoC,IAA1B,EAAKpD,MAAMe,WACrB0B,QAAS,kBAAM,EAAKd,mBAAmBY,KAHzC,QAMA,kBAAC,IAAD,CAAQjC,KAAK,SAAS6C,MAAM,WACzB,EAAKnC,MAAMf,MAAMuB,OAAS,IAAMe,GAChC,EAAKvB,MAAMqC,cAER,EAAKrC,MAAMf,MAAMuB,OAAS,IAAMe,GAChC,EAAKvB,MAAMqC,cACX,EAAKrC,MAAMqC,cACX,OAJA,WAON,e,uCAjIpB,SAAgCrC,EAAOhB,GACrC,GAAIgB,EAAMD,YACJC,EAAMD,aAAef,EAAMe,WAAY,CACzC,IAAIC,EAAMO,SAGH,MAAO,CAAER,WAAYC,EAAMD,YAFhC,GAA4B,IAAxBf,EAAMiB,OAAOO,QAAgBxB,EAAMsD,UACrC,MAAO,CAAEvC,WAAYC,EAAMD,YAInC,OAAO,S,GAVeH,IAAMC,WAyJhCC,EAAYyC,aAAe,CACzBL,YAAY,GAGCpC","file":"static/js/137.0fdd525f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Wizard from \"../../../components/@vuexy/wizard/WizardComponent\";\r\nimport {\r\n  // Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  CustomInput,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport Search from \"../../pages/search/Search\";\r\nclass StaffForm extends React.Component {\r\n  state = {\r\n    steps: [\r\n      {\r\n        title: 1,\r\n        content: (\r\n          <Row>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Name of the Manager* </Label>\r\n                <Input type=\"text\" required />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Address of the Manager* </Label>\r\n                <Input type=\"text\" required />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Phone Number*</Label>\r\n                <Input type=\"number\" required />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Joining Date*</Label>\r\n                <Input type=\"number\" required />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        ),\r\n      },\r\n      {\r\n        title: 2,\r\n        content: (\r\n          <Row>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Aadhar Number</Label>\r\n                <Input type=\"number\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label> PAN Card Number</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Photograph</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Date of Birth</Label>\r\n                <Input type=\"number\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Salary Decided</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Approved Leaves Per Month</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            {/* <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Any other facilities</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Select Tank </Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>Tank 1</option>\r\n                  <option>Tank 2</option>\r\n                  <option>Tank 3</option>\r\n                  <option>Tank 4</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Product Mapped to Tank </Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>Tank 1</option>\r\n                  <option>Tank 2</option>\r\n                  <option>Tank 3</option>\r\n                  <option>Tank 4</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Capacity</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>Tank 1</option>\r\n                  <option>Tank 2</option>\r\n                  <option>Tank 3</option>\r\n                  <option>Tank 4</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Select MPD</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>MPD 1</option>\r\n                  <option>MPD 2</option>\r\n                  <option>MPD 3</option>\r\n                  <option>MPD 4</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Map correct Bay to MPD</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>MPD 1</option>\r\n                  <option>MPD 2</option>\r\n                  <option>MPD 3</option>\r\n                  <option>MPD 4</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Select BAY</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>BAY 1</option>\r\n                  <option>BAY 2</option>\r\n                  <option>BAY 3</option>\r\n                  <option>BAY 4</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Map Correct Nozzle to each Bay</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>N1 and N2</option>\r\n                  <option>N1 and N2</option>\r\n                  <option>N1 and N2</option>\r\n                  <option>N1 and N2</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Select Nozzles</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>N1 and N2</option>\r\n                  <option>N1 and N2</option>\r\n                  <option>N1 and N2</option>\r\n                  <option>N1 and N2</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Map Tank to Nozzles</Label>\r\n                <CustomInput type=\"select\" name=\"select\" id=\"location\">\r\n                  <option>Tank 1/Tank 2/Tank 3</option>\r\n                  <option>Tank 1/Tank 2/Tank 3</option>\r\n                  <option>Tank 1/Tank 2/Tank 3</option>\r\n                  <option>Tank 1/Tank 2/Tank 3</option>\r\n                </CustomInput>\r\n              </FormGroup>\r\n            </Col> */}\r\n          </Row>\r\n        ),\r\n      },\r\n      {\r\n        title: 3,\r\n        content: (\r\n          <Row>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Name of the DSM </Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Address of the DSM </Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Phone Number </Label>\r\n                <Input type=\"number\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label> Joining Date </Label>\r\n                <Input type=\"number\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Aadhar Number</Label>\r\n                <Input type=\"number\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label> PAN Card Number</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Photograph</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Date of Birth</Label>\r\n                <Input type=\"number\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Salary Decided</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <FormGroup>\r\n                <Label>Approved Leaves Per Month</Label>\r\n                <Input type=\"text\" />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { steps } = this.state;\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Staff Enrollment Forms </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Wizard\r\n            enableAllSteps\r\n            onFinish={() => alert(\"submitted\")}\r\n            steps={steps}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffForm;\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n  Form,\r\n  Button\r\n} from \"reactstrap\"\r\nimport { AvForm } from \"availity-reactstrap-validation\"\r\n\r\nclass VuexyWizard extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.activeStep) {\r\n      if (props.activeStep !== state.activeStep) {\r\n        if (props.validate) {\r\n          if (state.errors.length === 0 && state.submitted)\r\n            return { activeStep: props.activeStep }\r\n        } else return { activeStep: props.activeStep }\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    activeStep: this.props.activeStep ? this.props.activeStep : 0,\r\n    errors: [],\r\n    values: []\r\n  }\r\n\r\n  handleNextStep = (index, total, errors = []) => {\r\n    let activeStep = this.state.activeStep\r\n    let validation = this.props.validate\r\n\r\n    if (!validation) {\r\n      if (activeStep <= index && activeStep !== total) {\r\n        this.setState({\r\n          activeStep: activeStep + 1\r\n        })\r\n      }\r\n    } else {\r\n      if (errors.length === 0 && activeStep <= index && activeStep !== total) {\r\n        this.setState({\r\n          activeStep: activeStep + 1\r\n        })\r\n      } else if (errors.length && this.props.onValidationError) {\r\n        this.props.onValidationError(this.state.errors)\r\n      } else {\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePreviousStep = index => {\r\n    let activeStep = this.state.activeStep\r\n    if (activeStep >= index)\r\n      this.setState({\r\n        activeStep: activeStep - 1\r\n      })\r\n  }\r\n\r\n  handleEnableAllSteps = index => {\r\n    if (this.props.enableAllSteps) {\r\n      this.setState({ activeStep: index })\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    if (\r\n      this.props.steps.length - 1 === this.state.activeStep &&\r\n      this.props.onFinish\r\n    ) {\r\n      this.props.onFinish(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let FormTag = this.props.validate ? AvForm : Form\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Nav\r\n          className={`vx-wizard ${\r\n            this.props.className ? this.props.className : \"\"\r\n          }`}\r\n          tabs>\r\n          {this.props.steps.map((item, i) => {\r\n            return (\r\n              <NavItem\r\n                className=\"step-wrapper\"\r\n                key={i}\r\n                onClick={() => this.handleEnableAllSteps(i)}>\r\n                <NavLink\r\n                  className={classnames(`step step-${i}`, {\r\n                    active: this.state.activeStep === i ? true : false,\r\n                    done: i < this.state.activeStep\r\n                  })}>\r\n                  <span className=\"step-text\">{item.title}</span>\r\n                </NavLink>\r\n              </NavItem>\r\n            )\r\n          })}\r\n        </Nav>\r\n        <TabContent\r\n          className={`vx-wizard-content ${\r\n            this.props.tabPaneClass ? this.props.tabPaneClass : \"\"\r\n          }`}\r\n          activeTab={this.state.activeStep}>\r\n          {this.props.steps.map((item, i) => {\r\n            return (\r\n              <TabPane\r\n                className={`step-content step-${i}-content`}\r\n                key={i}\r\n                tabId={i}>\r\n                <FormTag\r\n                  className=\"form-horizontal\"\r\n                  onSubmit={(e, errors, values) => {\r\n                    this.setState({ errors, values })\r\n                    if (!this.props.validate) e.preventDefault()\r\n                    this.handleNextStep(i, this.props.steps.length - 1, errors)\r\n                    this.handleSubmit(e)\r\n                  }}>\r\n                  {item.content}\r\n                  {this.props.pagination ? (\r\n                    <div className=\"wizard-actions d-flex justify-content-between\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={() => this.handlePreviousStep(i)}>\r\n                        Prev\r\n                      </Button>\r\n                      <Button type=\"submit\" color=\"primary\">\r\n                        {this.props.steps.length - 1 === i &&\r\n                        !this.props.finishBtnText\r\n                          ? \"Submit\"\r\n                          : this.props.steps.length - 1 === i &&\r\n                            this.props.finishBtnText\r\n                          ? this.props.finishBtnText\r\n                          : \"Next\"}\r\n                      </Button>\r\n                    </div>\r\n                  ) : null}\r\n                </FormTag>\r\n              </TabPane>\r\n            )\r\n          })}\r\n        </TabContent>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nVuexyWizard.propTypes = {\r\n  className: PropTypes.string,\r\n  steps: PropTypes.array.isRequired,\r\n  validate: PropTypes.bool,\r\n  enableAllSteps: PropTypes.bool,\r\n  finishBtnText: PropTypes.string,\r\n  onFinish: PropTypes.func,\r\n  pagination: PropTypes.bool,\r\n  onValidationError: PropTypes.func,\r\n  activeStep: PropTypes.number\r\n}\r\n\r\nVuexyWizard.defaultProps = {\r\n  pagination: true\r\n}\r\n\r\nexport default VuexyWizard\r\n"],"sourceRoot":""}